[{"/home/ubuntu_server/projects/walking-knight/src/index.tsx":"1","/home/ubuntu_server/projects/walking-knight/src/components/index.tsx":"2","/home/ubuntu_server/projects/walking-knight/src/components/App/index.tsx":"3","/home/ubuntu_server/projects/walking-knight/src/components/App/App.tsx":"4","/home/ubuntu_server/projects/walking-knight/src/Board/index.tsx":"5","/home/ubuntu_server/projects/walking-knight/src/PathFinder/index.tsx":"6","/home/ubuntu_server/projects/walking-knight/src/Board/BoardPiece.tsx":"7","/home/ubuntu_server/projects/walking-knight/src/Board/Board.tsx":"8","/home/ubuntu_server/projects/walking-knight/src/PathFinder/PathFinderKnightOnly.tsx":"9","/home/ubuntu_server/projects/walking-knight/src/PathFinder/PathFinder.tsx":"10","/home/ubuntu_server/projects/walking-knight/src/components/BoardDisplay/index.tsx":"11","/home/ubuntu_server/projects/walking-knight/src/components/BoardDisplay/BoardDisplay.tsx":"12","/home/ubuntu_server/projects/walking-knight/src/components/InteractiveBoard/index.tsx":"13","/home/ubuntu_server/projects/walking-knight/src/components/InteractiveBoard/InteractiveBoard.tsx":"14","/home/ubuntu_server/projects/walking-knight/src/components/BoardDisplay/svgs/index.tsx":"15","/home/ubuntu_server/projects/walking-knight/src/components/SolutionCard/index.tsx":"16","/home/ubuntu_server/projects/walking-knight/src/components/SolutionCard/SolutionCard.tsx":"17"},{"size":522,"mtime":1611546469171,"results":"18","hashOfConfig":"19"},{"size":32,"mtime":1612835907226,"results":"20","hashOfConfig":"19"},{"size":32,"mtime":1612835859850,"results":"21","hashOfConfig":"19"},{"size":1084,"mtime":1612850486321,"results":"22","hashOfConfig":"19"},{"size":146,"mtime":1612851767531,"results":"23","hashOfConfig":"19"},{"size":49,"mtime":1612948003679,"results":"24","hashOfConfig":"19"},{"size":158,"mtime":1612851759467,"results":"25","hashOfConfig":"19"},{"size":3315,"mtime":1612851733971,"results":"26","hashOfConfig":"19"},{"size":5324,"mtime":1612853258924,"results":"27","hashOfConfig":"19"},{"size":1657,"mtime":1612845847965,"results":"28","hashOfConfig":"19"},{"size":41,"mtime":1612835882658,"results":"29","hashOfConfig":"19"},{"size":3697,"mtime":1612851979365,"results":"30","hashOfConfig":"19"},{"size":45,"mtime":1612527999225,"results":"31","hashOfConfig":"19"},{"size":6241,"mtime":1612850543493,"results":"32","hashOfConfig":"19"},{"size":856,"mtime":1612853304436,"results":"33","hashOfConfig":"19"},{"size":41,"mtime":1612844808888,"results":"34","hashOfConfig":"19"},{"size":2480,"mtime":1612859615223,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1iyl7mr",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},"/home/ubuntu_server/projects/walking-knight/src/index.tsx",[],["72","73"],"/home/ubuntu_server/projects/walking-knight/src/components/index.tsx",[],"/home/ubuntu_server/projects/walking-knight/src/components/App/index.tsx",[],"/home/ubuntu_server/projects/walking-knight/src/components/App/App.tsx",[],"/home/ubuntu_server/projects/walking-knight/src/Board/index.tsx",[],"/home/ubuntu_server/projects/walking-knight/src/PathFinder/index.tsx",[],"/home/ubuntu_server/projects/walking-knight/src/Board/BoardPiece.tsx",[],"/home/ubuntu_server/projects/walking-knight/src/Board/Board.tsx",[],"/home/ubuntu_server/projects/walking-knight/src/PathFinder/PathFinderKnightOnly.tsx",[],"/home/ubuntu_server/projects/walking-knight/src/PathFinder/PathFinder.tsx",[],"/home/ubuntu_server/projects/walking-knight/src/components/BoardDisplay/index.tsx",[],"/home/ubuntu_server/projects/walking-knight/src/components/BoardDisplay/BoardDisplay.tsx",[],"/home/ubuntu_server/projects/walking-knight/src/components/InteractiveBoard/index.tsx",[],"/home/ubuntu_server/projects/walking-knight/src/components/InteractiveBoard/InteractiveBoard.tsx",[],"/home/ubuntu_server/projects/walking-knight/src/components/BoardDisplay/svgs/index.tsx",[],"/home/ubuntu_server/projects/walking-knight/src/components/SolutionCard/index.tsx",[],"/home/ubuntu_server/projects/walking-knight/src/components/SolutionCard/SolutionCard.tsx",["74"],"import React from 'react';\nimport './SolutionCard.css';\nimport { Card, CardContent, Divider, Typography } from '@material-ui/core';\nimport BoardDisplay from '../BoardDisplay';\nimport { Board } from '../../Board';\nimport PathFinder from '../../PathFinder';\n\ninterface ISolutionCardProps {\n    board: Board\n}\n\nexport default class SolutionCard extends React.Component<ISolutionCardProps, {}> {\n    constructor(props: ISolutionCardProps) {\n        super(props);\n    }\n\n    render(): JSX.Element {\n        let card_content: JSX.Element[] = [];\n\n        if (this.props.board.exists_start_and_dest()) {\n            const pf: PathFinder = new PathFinder(this.props.board);\n            const solns: Board[][] = pf.solve();\n            const jsx_solns: JSX.Element[] = [];\n            for (let i = 0; i < solns.length; ++i) {\n                if (i !== 0) {\n                    jsx_solns.push(<Divider style={{ margin: 5 }} />);\n                }\n\n                const jsx_soln_row: JSX.Element[] = [];\n                for (let j = 0; j < solns[i].length; ++j) {\n                    if (j !== 0) {\n                        jsx_soln_row.push(<Divider orientation='vertical' flexItem style={{ margin: 5 }} />);\n                    }\n                    jsx_soln_row.push(\n                        <div style={{ width: 250, height: 250 }}>\n                            <BoardDisplay\n                                board={solns[i][j]}\n                                on_click={(row: number, col: number) => (() => { })}\n                            />\n                        </div>\n                    );\n                }\n                jsx_solns.push(\n                    <div className='inline_flex_h'>\n                        {jsx_soln_row}\n                    </div>\n                );\n            }\n            card_content.push(\n                <div>\n                    <Typography variant='h5'>\n                        Number of hops: {solns.length > 0 ? (solns[0].length - 1) : 'N/A'}\n                    </Typography>\n                    <Typography variant='h5'>\n                        Number of shortest paths: {solns.length > 0 ? solns.length : 'N/A'}\n                    </Typography>\n                </div>\n            );\n            card_content.push(<div className='flex_v'>{jsx_solns}</div>);\n        }\n\n        return (\n            <Card>\n                <CardContent>\n                    {card_content}\n                </CardContent>\n            </Card>\n        );\n    }\n}",{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":13,"column":5,"nodeType":"81","messageId":"82","endLine":15,"endColumn":6},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]